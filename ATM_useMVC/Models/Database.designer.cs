#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATM_useMVC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bank")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertAtmMachine(AtmMachine instance);
    partial void UpdateAtmMachine(AtmMachine instance);
    partial void DeleteAtmMachine(AtmMachine instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::ATM_useMVC.Properties.Settings.Default.BankConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AtmMachine> AtmMachines
		{
			get
			{
				return this.GetTable<AtmMachine>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccNo;
		
		private string _PIN;
		
		private string _Title;
		
		private System.Nullable<int> _Balance;
		
		private string _AtmStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccNoChanging(string value);
    partial void OnAccNoChanged();
    partial void OnPINChanging(string value);
    partial void OnPINChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnAtmStatusChanging(string value);
    partial void OnAtmStatusChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNo", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccNo
		{
			get
			{
				return this._AccNo;
			}
			set
			{
				if ((this._AccNo != value))
				{
					this.OnAccNoChanging(value);
					this.SendPropertyChanging();
					this._AccNo = value;
					this.SendPropertyChanged("AccNo");
					this.OnAccNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIN", DbType="VarChar(50)")]
		public string PIN
		{
			get
			{
				return this._PIN;
			}
			set
			{
				if ((this._PIN != value))
				{
					this.OnPINChanging(value);
					this.SendPropertyChanging();
					this._PIN = value;
					this.SendPropertyChanged("PIN");
					this.OnPINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtmStatus", DbType="VarChar(10)")]
		public string AtmStatus
		{
			get
			{
				return this._AtmStatus;
			}
			set
			{
				if ((this._AtmStatus != value))
				{
					this.OnAtmStatusChanging(value);
					this.SendPropertyChanging();
					this._AtmStatus = value;
					this.SendPropertyChanged("AtmStatus");
					this.OnAtmStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmpID;
		
		private string _PIN;
		
		private string _Name;
		
		private string _CNIC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(string value);
    partial void OnEmpIDChanged();
    partial void OnPINChanging(string value);
    partial void OnPINChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCNICChanging(string value);
    partial void OnCNICChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIN", DbType="VarChar(50)")]
		public string PIN
		{
			get
			{
				return this._PIN;
			}
			set
			{
				if ((this._PIN != value))
				{
					this.OnPINChanging(value);
					this.SendPropertyChanging();
					this._PIN = value;
					this.SendPropertyChanged("PIN");
					this.OnPINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNIC", DbType="VarChar(50)")]
		public string CNIC
		{
			get
			{
				return this._CNIC;
			}
			set
			{
				if ((this._CNIC != value))
				{
					this.OnCNICChanging(value);
					this.SendPropertyChanging();
					this._CNIC = value;
					this.SendPropertyChanged("CNIC");
					this.OnCNICChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AtmMachines")]
	public partial class AtmMachine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MachineID;
		
		private System.Nullable<int> _n50000;
		
		private System.Nullable<int> _n100000;
		
		private System.Nullable<int> _n200000;
		
		private System.Nullable<int> _n500000;
		
		private System.Nullable<int> _TotalCash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMachineIDChanging(string value);
    partial void OnMachineIDChanged();
    partial void Onn50000Changing(System.Nullable<int> value);
    partial void Onn50000Changed();
    partial void Onn100000Changing(System.Nullable<int> value);
    partial void Onn100000Changed();
    partial void Onn200000Changing(System.Nullable<int> value);
    partial void Onn200000Changed();
    partial void Onn500000Changing(System.Nullable<int> value);
    partial void Onn500000Changed();
    partial void OnTotalCashChanging(System.Nullable<int> value);
    partial void OnTotalCashChanged();
    #endregion
		
		public AtmMachine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n50000", DbType="Int")]
		public System.Nullable<int> n50000
		{
			get
			{
				return this._n50000;
			}
			set
			{
				if ((this._n50000 != value))
				{
					this.Onn50000Changing(value);
					this.SendPropertyChanging();
					this._n50000 = value;
					this.SendPropertyChanged("n50000");
					this.Onn50000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n100000", DbType="Int")]
		public System.Nullable<int> n100000
		{
			get
			{
				return this._n100000;
			}
			set
			{
				if ((this._n100000 != value))
				{
					this.Onn100000Changing(value);
					this.SendPropertyChanging();
					this._n100000 = value;
					this.SendPropertyChanged("n100000");
					this.Onn100000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n200000", DbType="Int")]
		public System.Nullable<int> n200000
		{
			get
			{
				return this._n200000;
			}
			set
			{
				if ((this._n200000 != value))
				{
					this.Onn200000Changing(value);
					this.SendPropertyChanging();
					this._n200000 = value;
					this.SendPropertyChanged("n200000");
					this.Onn200000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n500000", DbType="Int")]
		public System.Nullable<int> n500000
		{
			get
			{
				return this._n500000;
			}
			set
			{
				if ((this._n500000 != value))
				{
					this.Onn500000Changing(value);
					this.SendPropertyChanging();
					this._n500000 = value;
					this.SendPropertyChanged("n500000");
					this.Onn500000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCash", DbType="Int")]
		public System.Nullable<int> TotalCash
		{
			get
			{
				return this._TotalCash;
			}
			set
			{
				if ((this._TotalCash != value))
				{
					this.OnTotalCashChanging(value);
					this.SendPropertyChanging();
					this._TotalCash = value;
					this.SendPropertyChanged("TotalCash");
					this.OnTotalCashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TID;
		
		private string _Type;
		
		private System.Nullable<int> _Amount;
		
		private string _aFrom;
		
		private string _bTo;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.TimeSpan> _Time;
		
		private string _MachineID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIDChanging(int value);
    partial void OnTIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnaFromChanging(string value);
    partial void OnaFromChanged();
    partial void OnbToChanging(string value);
    partial void OnbToChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeChanged();
    partial void OnMachineIDChanging(string value);
    partial void OnMachineIDChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TID
		{
			get
			{
				return this._TID;
			}
			set
			{
				if ((this._TID != value))
				{
					this.OnTIDChanging(value);
					this.SendPropertyChanging();
					this._TID = value;
					this.SendPropertyChanged("TID");
					this.OnTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aFrom", DbType="VarChar(50)")]
		public string aFrom
		{
			get
			{
				return this._aFrom;
			}
			set
			{
				if ((this._aFrom != value))
				{
					this.OnaFromChanging(value);
					this.SendPropertyChanging();
					this._aFrom = value;
					this.SendPropertyChanged("aFrom");
					this.OnaFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bTo", DbType="VarChar(50)")]
		public string bTo
		{
			get
			{
				return this._bTo;
			}
			set
			{
				if ((this._bTo != value))
				{
					this.OnbToChanging(value);
					this.SendPropertyChanging();
					this._bTo = value;
					this.SendPropertyChanged("bTo");
					this.OnbToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="VarChar(50)")]
		public string MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
